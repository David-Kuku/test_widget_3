{"id":"lY9v","dependencies":[{"name":"C:\\Users\\USER\\Desktop\\reddit-widget\\package.json","includedInParent":true,"mtime":1705221815605},{"name":"react","loc":{"line":1,"column":43,"index":43},"parent":"C:\\Users\\USER\\Desktop\\reddit-widget\\src\\App.js","resolved":"C:\\Users\\USER\\Desktop\\reddit-widget\\node_modules\\react\\index.js"},{"name":"./App.css","loc":{"line":2,"column":7,"index":59},"parent":"C:\\Users\\USER\\Desktop\\reddit-widget\\src\\App.js","resolved":"C:\\Users\\USER\\Desktop\\reddit-widget\\src\\App.css"},{"name":"./DummyComponent","loc":{"line":3,"column":27,"index":99},"parent":"C:\\Users\\USER\\Desktop\\reddit-widget\\src\\App.js","resolved":"C:\\Users\\USER\\Desktop\\reddit-widget\\src\\DummyComponent.js"},{"name":"./ModalComp","loc":{"line":4,"column":22,"index":141},"parent":"C:\\Users\\USER\\Desktop\\reddit-widget\\src\\App.js","resolved":"C:\\Users\\USER\\Desktop\\reddit-widget\\src\\ModalComp.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nrequire(\"./App.css\");\nvar _DummyComponent = _interopRequireDefault(require(\"./DummyComponent\"));\nvar _ModalComp = _interopRequireDefault(require(\"./ModalComp\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n// Render each post\n// function renderPost(post){\n//   const { data: { title, url, author, id } } = post\n//   const authorUrl = `https://www.reddit.com/u/${author}`\n\n//   return (\n//     <div className=\"reddit_widget__post\" key={id}>\n//       <div className=\"reddit_widget__posted_by\">\n//         posted by <a href={authorUrl} className=\"reddit_widget__posted_by\" target=\"_blank\" rel=\"noopener noreferrer\">u/{author}</a>\n//       </div>\n//       <a href={url} className=\"reddit_widget__title\" target=\"_blank\" rel=\"noopener noreferrer\">{title}</a>\n//     </div>\n//   )\n// }\n\n// // Filter, since reddit always returns stickied posts up top\n// function nonStickiedOnly(post){\n//   return !post.data.stickied\n// }\n\nfunction App(_ref) {\n  let {\n    domElement\n  } = _ref;\n  const subreddit = domElement.getAttribute(\"data-subreddit\");\n  const [loading, setLoading] = (0, _react.useState)();\n  const [error, setError] = (0, _react.useState)('');\n  const [data, setData] = (0, _react.useState)([]);\n  const [modalIsOpen, setModalIsOpen] = (0, _react.useState)(false);\n  (0, _react.useEffect)(() => {\n    // Fetch data from reddit\n    setLoading(true);\n    fetch(\"https://www.reddit.com/r/\".concat(subreddit, \".json\")).then(response => response.json()).then(data => {\n      setLoading(false);\n      setData(data.data.children.slice(0, 10));\n    }).catch(e => {\n      console.log(e);\n      setLoading(false);\n      setError('error fetching from reddit');\n    });\n  }, [subreddit]);\n  console.log(subreddit);\n  if (subreddit === \"javascript\") {\n    return /*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(\"button\", {\n      onClick: () => setModalIsOpen(true)\n    }, \"Click to pop us checkout\"), /*#__PURE__*/_react.default.createElement(_ModalComp.default, {\n      modalIsOpen: modalIsOpen,\n      setModalIsOpen: setModalIsOpen\n    }, /*#__PURE__*/_react.default.createElement(_DummyComponent.default, {\n      data: data,\n      error: error,\n      loading: loading,\n      subreddit: subreddit\n    })));\n  }\n  return /*#__PURE__*/_react.default.createElement(_DummyComponent.default, {\n    data: data,\n    error: error,\n    loading: loading,\n    subreddit: subreddit\n  });\n}\nvar _default = exports.default = App;"},"sourceMaps":null,"error":null,"hash":"d342920276abb672597306373f74db56","cacheData":{"env":{}}}